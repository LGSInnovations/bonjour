0 info it worked if it ends with ok
1 verbose cli [ '/home/kevindy/.nvm/versions/node/v6.13.1/bin/node',
1 verbose cli   '/home/kevindy/.nvm/versions/node/v6.13.1/bin/npm',
1 verbose cli   'publish',
1 verbose cli   '--access',
1 verbose cli   'public',
1 verbose cli   '.' ]
2 info using npm@3.10.10
3 info using node@v6.13.1
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/opt/kevindy/src/github/LGSInnovations/bonjour',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/kevindy/.npm/@lgs-innovations/bonjour/3.6.0/package.tgz not in flight; packing
9 verbose correctMkdir /home/kevindy/.npm correctMkdir not in flight; initializing
10 info lifecycle @lgs-innovations/bonjour@3.6.0~prepublish: @lgs-innovations/bonjour@3.6.0
11 silly lifecycle @lgs-innovations/bonjour@3.6.0~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/home/kevindy/.npm/@lgs-innovations/bonjour/3.6.0/package.tgz',
12 verbose tar pack   '/opt/kevindy/src/github/LGSInnovations/bonjour' ]
13 verbose tarball /home/kevindy/.npm/@lgs-innovations/bonjour/3.6.0/package.tgz
14 verbose folder /opt/kevindy/src/github/LGSInnovations/bonjour
15 verbose addLocalTarball adding from inside cache /home/kevindy/.npm/@lgs-innovations/bonjour/3.6.0/package.tgz
16 verbose correctMkdir /home/kevindy/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd @lgs-innovations/bonjour@3.6.0
18 verbose afterAdd /home/kevindy/.npm/@lgs-innovations/bonjour/3.6.0/package/package.json not in flight; writing
19 verbose correctMkdir /home/kevindy/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /home/kevindy/.npm/@lgs-innovations/bonjour/3.6.0/package/package.json written
21 silly publish { name: '@lgs-innovations/bonjour',
21 silly publish   version: '3.6.0',
21 silly publish   description: 'A Bonjour/Zeroconf implementation in pure JavaScript',
21 silly publish   main: 'index.js',
21 silly publish   dependencies:
21 silly publish    { 'array-flatten': '^2.1.0',
21 silly publish      'deep-equal': '^1.0.1',
21 silly publish      'dns-equal': '^1.0.0',
21 silly publish      'dns-txt': '^2.0.2',
21 silly publish      '@lgs-innovations/multicast-dns': '^7.0.0',
21 silly publish      'multicast-dns-service-types': '^1.1.0' },
21 silly publish   devDependencies: { 'after-all': '^2.0.2', standard: '^7.0.1', tape: '^4.5.1' },
21 silly publish   scripts: { test: 'standard && tape test/*.js' },
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+https://github.com/watson/bonjour.git' },
21 silly publish   keywords:
21 silly publish    [ 'bonjour',
21 silly publish      'zeroconf',
21 silly publish      'zero',
21 silly publish      'configuration',
21 silly publish      'mdns',
21 silly publish      'dns',
21 silly publish      'service',
21 silly publish      'discovery',
21 silly publish      'multicast',
21 silly publish      'broadcast',
21 silly publish      'dns-sd' ],
21 silly publish   author:
21 silly publish    { name: 'Thomas Watson Steen',
21 silly publish      email: 'w@tson.dk',
21 silly publish      url: 'https://twitter.com/wa7son' },
21 silly publish   license: 'MIT',
21 silly publish   bugs: { url: 'https://github.com/watson/bonjour/issues' },
21 silly publish   homepage: 'https://github.com/watson/bonjour',
21 silly publish   coordinates: [ 55.68250900965318, 12.586377442991648 ],
21 silly publish   readme: '# bonjour\n\nA Bonjour/Zeroconf protocol implementation in pure JavaScript. Publish\nservices on the local network or discover existing services using\nmulticast DNS.\n\n[![Build status](https://travis-ci.org/watson/bonjour.svg?branch=master)](https://travis-ci.org/watson/bonjour)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://github.com/feross/standard)\n\n## Installation\n\n```\nnpm install bonjour\n```\n\n## Usage\n\n```js\nvar bonjour = require(\'bonjour\')()\n\n// advertise an HTTP server on port 3000\nbonjour.publish({ name: \'My Web Server\', type: \'http\', port: 3000 })\n\n// browse for all http services\nbonjour.find({ type: \'http\' }, function (service) {\n  console.log(\'Found an HTTP server:\', service)\n})\n```\n\n## API\n\n### Initializing\n\n```js\nvar bonjour = require(\'bonjour\')([options])\n```\n\nThe `options` are optional and will be used when initializing the\nunderlying multicast-dns server. For details see [the multicast-dns\ndocumentation](https://github.com/mafintosh/multicast-dns#mdns--multicastdnsoptions).\n\n### Publishing\n\n#### `var service = bonjour.publish(options)`\n\nPublishes a new service.\n\nOptions are:\n\n- `name` (string)\n- `host` (string, optional) - defaults to local hostname\n- `port` (number)\n- `type` (string)\n- `subtypes` (array of strings, optional)\n- `protocol` (string, optional) - `udp` or `tcp` (default)\n- `txt` (object, optional) - an array of key/value objects to broadcast\n  as the TXT record\n\nIANA maintains a [list of official service types and port\nnumbers](http://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml).\n\n#### `bonjour.unpublishAll([callback])`\n\nUnpublish all services. The optional `callback` will be called when the\nservices have been unpublished.\n\n#### `bonjour.destroy()`\n\nDestroy the mdns instance. Closes the udp socket.\n\n### Browser\n\n#### `var browser = bonjour.find(options[, onup])`\n\nListen for services advertised on the network. An optional callback can\nbe provided as the 2nd argument and will be added as an event listener\nfor the `up` event.\n\nOptions (all optional):\n\n- `type` (string)\n- `subtypes` (array of strings)\n- `protocol` (string) - defaults to `tcp`\n- `txt` (object) - passed into [dns-txt\n  module](https://github.com/watson/dns-txt) contructor. Set to `{\n  binary: true }` if you want to keep the TXT records in binary\n\n#### `var browser = bonjour.findOne(options[, callback])`\n\nListen for and call the `callback` with the first instance of a service\nmatching the `options`. If no `callback` is given, it\'s expected that\nyou listen for the `up` event. The returned `browser` will automatically\nstop it self after the first matching service.\n\nOptions are the same as given in the `browser.find` function.\n\n#### `Event: up`\n\nEmitted every time a new service is found that matches the browser.\n\n#### `Event: down`\n\nEmitted every time an existing service emmits a goodbye message.\n\n#### `browser.services`\n\nAn array of services known by the browser to be online.\n\n#### `browser.start()`\n\nStart looking for matching services.\n\n#### `browser.stop()`\n\nStop looking for matching services.\n\n#### `browser.update()`\n\nBroadcast the query again.\n\n### Service\n\n#### `Event: up`\n\nEmitted when the service is up.\n\n#### `Event: error`\n\nEmitted if an error occurrs while publishing the service.\n\n#### `service.stop([callback])`\n\nUnpublish the service. The optional `callback` will be called when the\nservice have been unpublished.\n\n#### `service.start()`\n\nPublish the service.\n\n#### `service.name`\n\nThe name of the service, e.g. `Apple TV`.\n\n#### `service.type`\n\nThe type of the service, e.g. `http`.\n\n#### `service.subtypes`\n\nAn array of subtypes. Note that this property might be `null`.\n\n#### `service.protocol`\n\nThe protocol used by the service, e.g. `tcp`.\n\n#### `service.host`\n\nThe hostname or ip address where the service resides.\n\n#### `service.port`\n\nThe port on which the service listens, e.g. `5000`.\n\n#### `service.fqdn`\n\nThe fully qualified domain name of the service. E.g. if given the name\n`Foo Bar`, the type `http` and the protocol `tcp`, the `service.fqdn`\nproperty will be `Foo Bar._http._tcp.local`.\n\n#### `service.txt`\n\nThe TXT record advertised by the service (a key/value object). Note that\nthis property might be `null`.\n\n#### `service.published`\n\nA boolean indicating if the service is currently published.\n\n## License\n\nMIT\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: 'b82dff798252225e4256dafdebaf46268286c401',
21 silly publish   _id: '@lgs-innovations/bonjour@3.6.0',
21 silly publish   _shasum: '05e389b528c7412264e564d9c915372d17beabb2',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name @lgs-innovations/bonjour
24 silly mapToRegistry scope (from package name) @lgs-innovations
25 verbose mapToRegistry no registry URL found in name for scope @lgs-innovations
26 silly mapToRegistry using default registry
27 silly mapToRegistry registry https://registry.npmjs.org/
28 silly mapToRegistry data Result {
28 silly mapToRegistry   raw: '@lgs-innovations/bonjour',
28 silly mapToRegistry   scope: '@lgs-innovations',
28 silly mapToRegistry   escapedName: '@lgs-innovations%2fbonjour',
28 silly mapToRegistry   name: '@lgs-innovations/bonjour',
28 silly mapToRegistry   rawSpec: '',
28 silly mapToRegistry   spec: 'latest',
28 silly mapToRegistry   type: 'tag' }
29 silly mapToRegistry uri https://registry.npmjs.org/@lgs-innovations%2fbonjour
30 verbose publish registryBase https://registry.npmjs.org/
31 silly publish uploading /home/kevindy/.npm/@lgs-innovations/bonjour/3.6.0/package.tgz
32 verbose request uri https://registry.npmjs.org/@lgs-innovations%2fbonjour
33 verbose request sending authorization for write operation
34 info attempt registry request try #1 at 9:22:52 AM
35 verbose request using bearer token for auth
36 verbose request id 31e59c75e3e816b4
37 http request PUT https://registry.npmjs.org/@lgs-innovations%2fbonjour
38 http 403 https://registry.npmjs.org/@lgs-innovations%2fbonjour
39 verbose headers { 'content-type': 'application/json',
39 verbose headers   'cache-control': 'max-age=0',
39 verbose headers   'content-length': '93',
39 verbose headers   'accept-ranges': 'bytes',
39 verbose headers   date: 'Mon, 02 Apr 2018 15:22:52 GMT',
39 verbose headers   via: '1.1 varnish',
39 verbose headers   connection: 'keep-alive',
39 verbose headers   'x-served-by': 'cache-den6027-DEN',
39 verbose headers   'x-cache': 'MISS',
39 verbose headers   'x-cache-hits': '0',
39 verbose headers   'x-timer': 'S1522682572.075524,VS0,VE357' }
40 verbose request invalidating /home/kevindy/.npm/registry.npmjs.org/_40lgs-innovations_252fbonjour on PUT
41 error publish Failed PUT 403
42 verbose stack Error: You cannot publish over the previously published versions: 3.6.0. : @lgs-innovations/bonjour
42 verbose stack     at makeError (/home/kevindy/.nvm/versions/node/v6.13.1/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:302:12)
42 verbose stack     at CachingRegistryClient.<anonymous> (/home/kevindy/.nvm/versions/node/v6.13.1/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:290:14)
42 verbose stack     at Request._callback (/home/kevindy/.nvm/versions/node/v6.13.1/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:210:14)
42 verbose stack     at Request.self.callback (/home/kevindy/.nvm/versions/node/v6.13.1/lib/node_modules/npm/node_modules/request/request.js:187:22)
42 verbose stack     at emitTwo (events.js:106:13)
42 verbose stack     at Request.emit (events.js:191:7)
42 verbose stack     at Request.<anonymous> (/home/kevindy/.nvm/versions/node/v6.13.1/lib/node_modules/npm/node_modules/request/request.js:1048:10)
42 verbose stack     at emitOne (events.js:96:13)
42 verbose stack     at Request.emit (events.js:188:7)
42 verbose stack     at IncomingMessage.<anonymous> (/home/kevindy/.nvm/versions/node/v6.13.1/lib/node_modules/npm/node_modules/request/request.js:969:12)
43 verbose statusCode 403
44 verbose pkgid @lgs-innovations/bonjour
45 verbose cwd /opt/kevindy/src/github/LGSInnovations/bonjour
46 error Linux 4.13.0-37-generic
47 error argv "/home/kevindy/.nvm/versions/node/v6.13.1/bin/node" "/home/kevindy/.nvm/versions/node/v6.13.1/bin/npm" "publish" "--access" "public" "."
48 error node v6.13.1
49 error npm  v3.10.10
50 error code E403
51 error You cannot publish over the previously published versions: 3.6.0. : @lgs-innovations/bonjour
52 error If you need help, you may report this error at:
52 error     <https://github.com/npm/npm/issues>
53 verbose exit [ 1, true ]
